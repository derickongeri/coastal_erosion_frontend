import { FracturedJsonOptions } from "./FracturedJsonOptions";
import { BracketPaddingType } from "./BracketPaddingType";
import { JsonItemType } from "./JsonItemType";
export declare class PaddedFormattingTokens {
    get Comma(): string;
    get Colon(): string;
    get Comment(): string;
    get EOL(): string;
    get CommaLen(): number;
    get ColonLen(): number;
    get CommentLen(): number;
    get PrefixStringLen(): number;
    get DummyComma(): string;
    constructor(opts: FracturedJsonOptions, strLenFunc: (val: string) => number);
    ArrStart(type: BracketPaddingType): string;
    ArrEnd(type: BracketPaddingType): string;
    ObjStart(type: BracketPaddingType): string;
    ObjEnd(type: BracketPaddingType): string;
    Start(elemType: JsonItemType, bracketType: BracketPaddingType): string;
    End(elemType: JsonItemType, bracketType: BracketPaddingType): string;
    ArrStartLen(type: BracketPaddingType): number;
    ArrEndLen(type: BracketPaddingType): number;
    ObjStartLen(type: BracketPaddingType): number;
    ObjEndLen(type: BracketPaddingType): number;
    StartLen(elemType: JsonItemType, bracketType: BracketPaddingType): number;
    EndLen(elemType: JsonItemType, bracketType: BracketPaddingType): number;
    Indent(level: number): string;
    Spaces(level: number): string;
    private readonly _comma;
    private readonly _colon;
    private readonly _comment;
    private readonly _eol;
    private readonly _dummyComma;
    private readonly _commaLen;
    private readonly _colonLen;
    private readonly _commentLen;
    private readonly _prefixStringLen;
    private readonly _arrStart;
    private readonly _arrEnd;
    private readonly _objStart;
    private readonly _objEnd;
    private readonly _arrStartLen;
    private readonly _arrEndLen;
    private readonly _objStartLen;
    private readonly _objEndLen;
    private readonly _indentStrings;
    private readonly _spaceStrings;
}
